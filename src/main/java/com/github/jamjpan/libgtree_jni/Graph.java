/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.github.jamjpan.libgtree_jni;

public class Graph {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Graph(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Graph obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        gtreeJNIJNI.delete_Graph(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setN(long value) {
    gtreeJNIJNI.Graph_n_set(swigCPtr, this, value);
  }

  public long getN() {
    return gtreeJNIJNI.Graph_n_get(swigCPtr, this);
  }

  public void setM(long value) {
    gtreeJNIJNI.Graph_m_set(swigCPtr, this, value);
  }

  public long getM() {
    return gtreeJNIJNI.Graph_m_get(swigCPtr, this);
  }

  public void setMCount(int value) {
    gtreeJNIJNI.Graph_mCount_set(swigCPtr, this, value);
  }

  public int getMCount() {
    return gtreeJNIJNI.Graph_mCount_get(swigCPtr, this);
  }

  public void setId(IntVector value) {
    gtreeJNIJNI.Graph_id_set(swigCPtr, this, IntVector.getCPtr(value), value);
  }

  public IntVector getId() {
    long cPtr = gtreeJNIJNI.Graph_id_get(swigCPtr, this);
    return (cPtr == 0) ? null : new IntVector(cPtr, false);
  }

  public void setHead(IntVector value) {
    gtreeJNIJNI.Graph_head_set(swigCPtr, this, IntVector.getCPtr(value), value);
  }

  public IntVector getHead() {
    long cPtr = gtreeJNIJNI.Graph_head_get(swigCPtr, this);
    return (cPtr == 0) ? null : new IntVector(cPtr, false);
  }

  public void setNext(IntVector value) {
    gtreeJNIJNI.Graph_next_set(swigCPtr, this, IntVector.getCPtr(value), value);
  }

  public IntVector getNext() {
    long cPtr = gtreeJNIJNI.Graph_next_get(swigCPtr, this);
    return (cPtr == 0) ? null : new IntVector(cPtr, false);
  }

  public void setAdjv(IntVector value) {
    gtreeJNIJNI.Graph_adjv_set(swigCPtr, this, IntVector.getCPtr(value), value);
  }

  public IntVector getAdjv() {
    long cPtr = gtreeJNIJNI.Graph_adjv_get(swigCPtr, this);
    return (cPtr == 0) ? null : new IntVector(cPtr, false);
  }

  public void setWeights(SWIGTYPE_p_std__vectorT_long_t value) {
    gtreeJNIJNI.Graph_weights_set(swigCPtr, this, SWIGTYPE_p_std__vectorT_long_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__vectorT_long_t getWeights() {
    long cPtr = gtreeJNIJNI.Graph_weights_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_std__vectorT_long_t(cPtr, false);
  }

  public Graph() {
    this(gtreeJNIJNI.new_Graph(), true);
  }

  public void init(long _n, long _m) {
    gtreeJNIJNI.Graph_init(swigCPtr, this, _n, _m);
  }

  public void readOriginalGraph(String graph_path) {
    gtreeJNIJNI.Graph_readOriginalGraph(swigCPtr, this, graph_path);
  }

  public void generevGraph(Graph gnew) {
    gtreeJNIJNI.Graph_generevGraph(swigCPtr, this, Graph.getCPtr(gnew), gnew);
  }

  public void addEdge(int s, int t, int weight) {
    gtreeJNIJNI.Graph_addEdge(swigCPtr, this, s, t, weight);
  }

  public void Split(IntVector PClasses, SWIGTYPE_p_idx_t nparts) {
    gtreeJNIJNI.Graph_Split__SWIG_0(swigCPtr, this, IntVector.getCPtr(PClasses), PClasses, SWIGTYPE_p_idx_t.getCPtr(nparts));
  }

  public void Split(IntVector PClasses) {
    gtreeJNIJNI.Graph_Split__SWIG_1(swigCPtr, this, IntVector.getCPtr(PClasses), PClasses);
  }

  public int Split_test_border_num(int nparts) {
    return gtreeJNIJNI.Graph_Split_test_border_num(swigCPtr, this, nparts);
  }

  public void buildSubgraphs(IntVector par_cls_idx, SWIGTYPE_p_p_gtree__Graph Gs, long cls_num) {
    gtreeJNIJNI.Graph_buildSubgraphs__SWIG_0(swigCPtr, this, IntVector.getCPtr(par_cls_idx), par_cls_idx, SWIGTYPE_p_p_gtree__Graph.getCPtr(Gs), cls_num);
  }

  public void buildSubgraphs(IntVector par_cls_idx, SWIGTYPE_p_p_gtree__Graph Gs) {
    gtreeJNIJNI.Graph_buildSubgraphs__SWIG_1(swigCPtr, this, IntVector.getCPtr(par_cls_idx), par_cls_idx, SWIGTYPE_p_p_gtree__Graph.getCPtr(Gs));
  }

}
